# Example Automation Rules for PMA Backend
# This file contains sample automation rules demonstrating various trigger types,
# conditions, and actions supported by the PMA automation engine.

# Example 1: Motion-activated lights
---
id: motion_lights_living_room
name: "Living Room Motion Lights"
description: "Turn on living room lights when motion is detected during night hours"
enabled: true
mode: single
triggers:
  - platform: state
    entity_id: binary_sensor.living_room_motion
    from: "off"
    to: "on"
conditions:
  - condition: time
    after: "sunset"
    before: "sunrise"
  - condition: state
    entity_id: person.home_user
    state: "home"
actions:
  - service: light.turn_on
    entity_id: light.living_room_main
    data:
      brightness: 80
      transition: 3
  - delay: "00:10:00"
  - service: light.turn_off
    entity_id: light.living_room_main
    data:
      transition: 10

---
# Example 2: Temperature monitoring with notifications
id: temperature_alert_high
name: "High Temperature Alert"
description: "Send notification when temperature exceeds 25°C"
enabled: true
mode: single
triggers:
  - platform: numeric_state
    entity_id: sensor.living_room_temperature
    above: 25.0
    for: "00:05:00"
conditions:
  - condition: time
    after: "08:00"
    before: "22:00"
actions:
  - service: notify.mobile_app
    data:
      title: "Temperature Alert"
      message: "Living room temperature is {{ states('sensor.living_room_temperature') }}°C"
      data:
        priority: high
        tag: temperature_alert

---
# Example 3: Scheduled automation with multiple actions
id: morning_routine
name: "Morning Routine"
description: "Execute morning routine at 7 AM on weekdays"
enabled: true
mode: single
triggers:
  - platform: time
    at: "07:00:00"
conditions:
  - condition: time
    weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
  - condition: state
    entity_id: person.home_user
    state: "home"
actions:
  - service: light.turn_on
    target:
      area_id: bedroom
    data:
      brightness: 30
      transition: 60
  - delay: "00:05:00"
  - service: light.turn_on
    target:
      area_id: kitchen
    data:
      brightness: 100
  - service: media_player.play_media
    entity_id: media_player.bedroom_speaker
    data:
      media_content_id: "playlist:morning_music"
      media_content_type: "playlist"
  - service: climate.set_temperature
    entity_id: climate.main_thermostat
    data:
      temperature: 21

---
# Example 4: Security automation with composite conditions
id: security_arm_away
name: "Auto Arm Security System"
description: "Automatically arm security system when everyone leaves"
enabled: true
mode: single
triggers:
  - platform: state
    entity_id: group.all_persons
    to: "not_home"
    for: "00:10:00"
conditions:
  - condition: state
    entity_id: alarm_control_panel.home_security
    state: "disarmed"
  - condition: time
    after: "08:00"
    before: "23:00"
actions:
  - service: light.turn_off
    target:
      area_id: all
  - service: climate.set_preset_mode
    entity_id: climate.main_thermostat
    data:
      preset_mode: "away"
  - delay: "00:02:00"
  - service: alarm_control_panel.alarm_arm_away
    entity_id: alarm_control_panel.home_security
  - service: notify.mobile_app
    data:
      title: "Security System"
      message: "Security system armed - away mode"

---
# Example 5: Device automation with conditional actions
id: device_battery_low
name: "Low Battery Alert"
description: "Alert when any device battery is low"
enabled: true
mode: parallel
triggers:
  - platform: numeric_state
    entity_id: sensor.smoke_detector_battery
    below: 20
  - platform: numeric_state
    entity_id: sensor.door_sensor_battery
    below: 20
  - platform: numeric_state
    entity_id: sensor.motion_sensor_battery
    below: 20
actions:
  - service: notify.persistent_notification
    data:
      title: "Low Battery Warning"
      message: "Device {{ trigger.entity_id }} has low battery ({{ trigger.to_state.state }}%)"
  - service: light.turn_on
    entity_id: light.status_led
    data:
      color_name: "red"
      brightness: 255
  - delay: "00:00:05"
  - service: light.turn_off
    entity_id: light.status_led

---
# Example 6: Advanced automation with templates and variables
id: adaptive_lighting
name: "Adaptive Lighting"
description: "Adjust light brightness based on time of day and presence"
enabled: true
mode: single
variables:
  brightness_morning: 50
  brightness_day: 80
  brightness_evening: 30
  brightness_night: 10
triggers:
  - platform: state
    entity_id: binary_sensor.living_room_motion
    to: "on"
  - platform: time
    at: "06:00:00"
  - platform: time
    at: "12:00:00"
  - platform: time
    at: "18:00:00"
  - platform: time
    at: "22:00:00"
conditions:
  - condition: state
    entity_id: person.home_user
    state: "home"
actions:
  - service: light.turn_on
    entity_id: light.living_room_main
    data:
      brightness: >
        {% set hour = now().hour %}
        {% if 6 <= hour < 12 %}
          {{ variables.brightness_morning }}
        {% elif 12 <= hour < 18 %}
          {{ variables.brightness_day }}
        {% elif 18 <= hour < 22 %}
          {{ variables.brightness_evening }}
        {% else %}
          {{ variables.brightness_night }}
        {% endif %}
      color_temp: >
        {% set hour = now().hour %}
        {% if 6 <= hour < 18 %}
          250
        {% else %}
          400
        {% endif %}

---
# Example 7: Webhook-triggered automation
id: webhook_guest_mode
name: "Guest Mode Activation"
description: "Activate guest mode when triggered via webhook"
enabled: true
mode: single
triggers:
  - platform: webhook
    webhook_id: guest_mode_webhook
    method: POST
actions:
  - service: light.turn_on
    target:
      area_id: guest_room
    data:
      brightness: 100
  - service: climate.set_temperature
    entity_id: climate.guest_room
    data:
      temperature: 22
  - service: media_player.volume_set
    entity_id: media_player.guest_room_speaker
    data:
      volume_level: 0.3
  - service: input_boolean.turn_on
    entity_id: input_boolean.guest_mode
  - service: notify.mobile_app
    data:
      title: "Guest Mode"
      message: "Guest mode activated via webhook"

---
# Example 8: Sun-based automation with offset
id: sunset_lighting
name: "Sunset Lighting Scene"
description: "Activate evening lighting 30 minutes before sunset"
enabled: true
mode: single
triggers:
  - platform: sun
    event: sunset
    offset: "-00:30:00"
conditions:
  - condition: state
    entity_id: group.all_persons
    state: "home"
actions:
  - service: scene.turn_on
    entity_id: scene.evening_lighting
  - service: notify.mobile_app
    data:
      title: "Evening Scene"
      message: "Evening lighting activated" 