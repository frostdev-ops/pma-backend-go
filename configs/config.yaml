server:
  port: 3001
  host: "0.0.0.0"
  mode: "development" # development, production

database:
  path: "./data/pma.db"
  migrations_path: "./migrations"
  backup_enabled: true
  backup_path: "./data/backups"
  max_connections: 25

# Performance optimization configuration
performance:
  database:
    max_connections: 25
    max_idle_conns: 10
    conn_max_lifetime: "1h"
    query_timeout: "30s"
    enable_query_cache: true
    cache_ttl: "30m"
  memory:
    gc_target: 70
    heap_limit: 1073741824  # 1GB
    enable_pooling: true
  api:
    enable_compression: true
    max_request_size: 10485760  # 10MB
    rate_limit_requests: 1000
    rate_limit_window: "1m"
  websocket:
    max_connections: 1000
    message_buffer_size: 256
    compression_enabled: true

auth:
  enabled: true  # Enable authentication by default
  jwt_secret: "Bwv3acVjr0RHkYNnXAsDAT7RYWXaQEZhm7xZzfccUMI=" # Override with environment variable
  token_expiry: 1800 # 30 minutes in seconds (to match frontend expectations)

home_assistant:
  url: "http://192.168.100.2:8123"
  token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJiYzkzMGUwZThlZmY0ZWEyOTc3NmI3MTIwYjc2NTAyYyIsImlhdCI6MTc1MjYxMTUxOSwiZXhwIjoyMDY3OTcxNTE5fQ.Dilak2Vad3GpSnRfrFBkAK3TRSUVQ42uOI4DMORJGoc" # Override with environment variable
  sync:
    enabled: true
    full_sync_interval: "1h"
    supported_domains: ["light", "switch", "sensor", "binary_sensor", "climate", "cover", "lock", "alarm_control_panel"]
    conflict_resolution: "homeassistant_wins"
    batch_size: 100
    retry_attempts: 3
    retry_delay: "5s"
    event_buffer_size: 1000
    event_processing_delay: "100ms"

logging:
  level: "info" # debug, info, warn, error
  format: "json" # json, text

websocket:
  ping_interval: 30 # seconds
  pong_timeout: 60 # seconds
  write_timeout: 10 # seconds

ai:
  fallback_enabled: true
  fallback_delay: "2s"
  default_provider: "ollama"
  max_retries: 3
  timeout: "30s"
  providers:
    - type: "ollama"
      enabled: true
      url: "http://localhost:11434"
      default_model: "llama2"
      auto_start: true
      priority: 1
      resource_limits:
        max_memory: "4GB"
        max_cpu: 80
    - type: "openai"
      enabled: false
      api_key: "" # Override with OPENAI_API_KEY environment variable
      default_model: "gpt-3.5-turbo"
      max_tokens: 4096
      priority: 2
    - type: "claude"
      enabled: false
      api_key: "" # Override with CLAUDE_API_KEY environment variable
      default_model: "claude-3-haiku-20240307"
      max_tokens: 4096
      priority: 3
    - type: "gemini"
      enabled: true
      api_key: "AIzaSyArZr6EQ2atRvilgk7T7aSEhZkYmQhdPo4" # Override with GEMINI_API_KEY environment variable
      default_model: "gemini-pro"
      max_tokens: 4096
      priority: 4

# Router/Network Configuration
router:
  enabled: true
  base_url: "http://192.168.100.1:8080"
  auth_token: "" # Override with PMA_ROUTER_AUTH_TOKEN environment variable
  timeout: "30s"
  retry_attempts: 3
  monitoring_enabled: true
  auto_discovery: true
  traffic_logging: true

# Device Integration Configuration  
devices:
  health_check_interval: "30s"
  ring:
    enabled: false
    email: "" # Override with RING_EMAIL environment variable
    password: "" # Override with RING_PASSWORD environment variable  
    poll_interval: "5m"
    event_interval: "30s"
    event_limit: 20
    auto_reconnect: true
  shelly:
    enabled: false
    discovery_interval: "5m"
    poll_interval: "30s"
    username: "admin"
    password: "" # Override with SHELLY_PASSWORD environment variable
    discovery_timeout: "30s"
    auto_reconnect: true
    devices: [] # List of specific Shelly devices to manage
    mock_devices: # For testing/demo purposes
      enabled: false
      devices:
        - ip: "192.168.100.50"
          name: "shelly1pm-DDEE01"
          model: "SHSW-1PM"
          type: "switch_pm"
          enabled: true
        - ip: "192.168.100.51"
          name: "shelly25-DDEE02"
          model: "SHSW-25"
          type: "roller"
          enabled: true
  ups:
    enabled: false
    nut_host: "localhost"
    nut_port: 3493
    ups_name: "ups"
    username: ""
    password: ""
    nut_servers: []
    poll_interval: "30s"
    monitoring_interval: "30s"
    history_retention_days: 30
  network:
    enabled: true
    scan_interval: "5m"
    scan_subnets: ["192.168.1.0/24", "192.168.100.0/24"]
    enable_wake_on_lan: true
    discovery_ports: [22, 80, 443, 445, 8080]
    ping_timeout: "5s"
    auto_reconnect: true

# System Services Configuration
system:
  environment: "development" # development, production, testing
  device_id_file: "./data/device_id"
  max_log_entries: 1000
  performance_monitoring: true
  services:
    home_assistant:
      enabled: true
      host: "192.168.100.2"
      port: 8123
      display_name: "Home Assistant"
      type: "network_service"
    database:
      enabled: true
      path: "./data/pma.db"
      display_name: "SQLite Database"
      type: "file_service"
    websocket:
      enabled: true
      display_name: "WebSocket Service"
      type: "internal_service"
    backend:
      enabled: true
      service_name: "pma-backend"
      display_name: "PMA Backend"
      type: "systemd_service"
    nginx:
      enabled: true
      service_name: "nginx"
      display_name: "Nginx Web Server"
      type: "systemd_service"
    router:
      enabled: true
      service_name: "pma-router"
      display_name: "PMA Router"
      type: "systemd_service"

# External Services Configuration
external_services:
  # External API endpoints for system utilities
  ip_check_services:
    primary: "http://httpbin.org/ip"
    fallback: "http://ipv4.icanhazip.com"
    timeout: "10s"
  
  # Ring API endpoints
  ring:
    api_base_url: "https://api.ring.com"
    oauth_url: "https://oauth.ring.com/oauth/token"
    
  # Mock/testing endpoints  
  mock_data:
    enabled: false # Set to true for testing/demo
    ring_snapshots_base: "https://ring-snapshots.s3.amazonaws.com/mock"
    ring_streams_base: "https://ring-streams.example.com"

# File Storage and Paths
storage:
  base_path: "./data"
  temp_path: "./data/temp"
  backup_path: "./data/backups"
  cache_path: "./data/cache"
  logs_path: "./logs"
  device_id_file: "./data/device_id"

# Security Configuration
security:
  enable_cors: true
  allowed_origins: ["*"] # Override with PMA_ALLOWED_ORIGINS environment variable
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    burst_size: 10
  
# Test and development configuration
test:
  # Test endpoints configuration
  endpoints_enabled: true  # Automatically disabled in production mode
  mock_data_persistence: false  # Whether mock data persists between restarts
  
  # Mock entity generation defaults
  default_entity_count: 20
  supported_entity_types: ["light", "switch", "sensor", "binary_sensor", "climate", "cover", "lock"]
  
  # Performance testing configuration
  performance_tests_enabled: true
  max_performance_test_duration: "60s"
  
  # Connection testing configuration
  connection_timeout: "30s"
  health_check_interval: "5m"
  
  # Development helpers
  auto_generate_test_data: false
  reset_data_on_startup: false

# Configuration complete - all device adapters are now configured under the devices: section above

# Environment Variable Overrides Documentation
# The following environment variables can override configuration values:
# - JWT_SECRET: Override auth.jwt_secret
# - HOME_ASSISTANT_TOKEN: Override home_assistant.token  
# - HA_TOKEN: Override homeassistant.token
# - PMA_ROUTER_AUTH_TOKEN: Override router.auth_token
# - RING_EMAIL: Override ring.email / devices.ring.email
# - RING_PASSWORD: Override ring.password / devices.ring.password
# - SHELLY_PASSWORD: Override devices.shelly.password
# - OPENAI_API_KEY: Override ai.providers[openai].api_key
# - CLAUDE_API_KEY: Override ai.providers[claude].api_key
# - GEMINI_API_KEY: Override ai.providers[gemini].api_key
# - PORT: Override server.port
# - DATABASE_PATH: Override database.path
# - LOG_LEVEL: Override logging.level 